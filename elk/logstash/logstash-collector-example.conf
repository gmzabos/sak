# - .conf file for logstash collector node
# - Read from Hadoop MapReduce History Server: per-job single line json
# - forward to logstash
#######################################################################
# input     - filebeat single line json
# filter    - mutate fields, calculate time difference
# output    - json
input {
    beats {
        id => "log-ops-hadoop-input"
        port => <port>
        codec => json
    }
}

filter {
    # Set the Receive TimeStamp
    ruby {
        id => "log-ops-hadoop-t-rec"
        code => "event.set('t_rec_cn', Time.now.utc.iso8601(3))"
    }
    mutate {
        remove_field => [ "host", "diagnostics", "uberized", "failedMapAttempts", "failedReduceAttempts", "killedMapAttempts", "killedReduceAttempts", "successfulMapAttempts", "successfulReduceAttempts" ]
    }
    date {
        timezone => "UTC"
        match => ["submitTime", "UNIX_MS"]
        target => "job_submit"

    }
    date {
        timezone => "UTC"
        match => ["startTime", "UNIX_MS"]
        target => "job_start"
    }
    date {
        timezone => "UTC"
        match => ["finishTime", "UNIX_MS"]
        target => "job_finish"
    }
    ruby {
        id => "log-ops-hadoop-calc-init-t"
        init => "require 'time'"
        code => "duration = (event.get('job_start') - event.get('job_submit')) rescue nil; event.set('job_run_init', duration); "

    }
    ruby {
        id => "log-ops-hadoop-calc-proc-t"
        init => "require 'time'"
        code => "duration = (event.get('job_finish') - event.get('job_start')) rescue nil; event.set('job_run_proc', duration); "
    }
}

# Output section
output {
    http {
        id => "log-ops-hadoop-output"
        url => "https://<hostname>:<port>"
        http_method => "post"
        codec => "json"
    }
    # By uncommenting the “stdout” lines below, outgoing event data is written to the log which can be accessed via the UI. 
    # This can be quite convenient when debugging the configuration by allowing instant access to the event data after it has passed through.
    # Please note that after debugging, “stdout” has to be deactivated by setting it as comment.
    # stdout {
    #  codec => rubydebug { metadata => true }
    #}
}